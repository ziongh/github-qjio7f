/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const DashboardTodoLazyImport = createFileRoute('/dashboard/todo')()
const DashboardAboutLazyImport = createFileRoute('/dashboard/about')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardTodoLazyRoute = DashboardTodoLazyImport.update({
  path: '/todo',
  getParentRoute: () => DashboardRoute,
} as any).lazy(() =>
  import('./routes/dashboard/todo.lazy').then((d) => d.Route),
)

const DashboardAboutLazyRoute = DashboardAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => DashboardRoute,
} as any).lazy(() =>
  import('./routes/dashboard/about.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/about': {
      preLoaderRoute: typeof DashboardAboutLazyImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/todo': {
      preLoaderRoute: typeof DashboardTodoLazyImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  DashboardRoute.addChildren([DashboardAboutLazyRoute, DashboardTodoLazyRoute]),
])

/* prettier-ignore-end */
